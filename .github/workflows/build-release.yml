name: Build and Publish NuGet

on:
  release:
    types: [published]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'src/Jackdaw.Core/Jackdaw.Core.csproj'
  GENERATOR_PATH: 'src/Jackdaw.SourceGenerator/Jackdaw.SourceGenerator.csproj'
  PACKAGE_OUTPUT_DIR: ${{ github.workspace }}/nupkgs

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Core dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Restore Source Generator dependencies
      run: dotnet restore ${{ env.GENERATOR_PATH }}

    - name: Build Source Generator
      run: dotnet build ${{ env.GENERATOR_PATH }} -c Release --no-restore

    - name: Build Core Library
      run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal
      continue-on-error: true

    - name: Set version from release tag
      if: github.event_name == 'release'
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Pack NuGet package
      run: |
        if [ -n "$PACKAGE_VERSION" ]; then
          dotnet pack ${{ env.PROJECT_PATH }} -c Release --no-build --output ${{ env.PACKAGE_OUTPUT_DIR }} /p:PackageVersion=$PACKAGE_VERSION
        else
          dotnet pack ${{ env.PROJECT_PATH }} -c Release --no-build --output ${{ env.PACKAGE_OUTPUT_DIR }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: ${{ env.PACKAGE_OUTPUT_DIR }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish to GitHub Packages
      run: |
        dotnet nuget push "${{ env.PACKAGE_OUTPUT_DIR }}/*.nupkg" \
          --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --skip-duplicate